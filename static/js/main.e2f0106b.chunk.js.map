{"version":3,"sources":["components/Content.js","components/Editor.js","components/AttributeList.js","data.js","components/SelectableElement.js","components/MethodList.js","components/PropertyList.js","components/Inspector.js","utils/index.js","components/App.js","index.js"],"names":["StyledContainer","styled","div","Content","html","selectedElement","onSelectedElement","highlightedElement","onHighlightedElement","elementRef","useRef","useEffect","element","current","handleSelectElement","target","handleHighlightElement","handleRemoveHighlight","addEventListener","removeEventListener","ref","id","dangerouslySetInnerHTML","__html","Editor","setHtml","isLiveEditor","setIsLiveEditor","onMouseEnter","onMouseLeave","style","height","value","onBeforeChange","editor","data","options","mode","htmlMode","theme","StyledAttributeList","ul","AttributeList","Array","from","attributes","map","name","className","commonDOMProperties","readOnly","description","mdn","commonDOMMethods","args","StyledSpan","span","SelectableElement","onClick","onMouseOver","onMouseOut","tagName","toLowerCase","StyledMethodList","MethodItem","argList","onUpdateSelectedElement","arg","join","inputs","reduce","arr","push","useState","inputData","setInputData","methodResult","setMethodResult","inputValues","preview","href","rel","onSubmit","event","preventDefault","result","marginLeft","length","type","onChange","input","HTMLElement","NodeList","el","undefined","toString","MethodList","methodList","onUpdateSelectedElementStyle","method","StyledPropertyList","PropertyItem","children","PropertyList","propertiesList","filter","property","HTMLCollection","child","index","CSSStyleDeclaration","items","item","DOMStringMap","dataset","StyledElementName","h1","StyledCodeMirror","CodeMirror","Inspector","title","classes","split","c","printElementName","outerHTML","lineWrapping","StyledMain","main","StyledContent","StyledEditor","StyledInspector","initialHTML","App","editorHtml","setEditorHtml","setHighlightedElement","setSelectedElement","handleSetHighlightedElement","nextElement","container","closest","querySelectorAll","forEach","classList","remove","add","handleSetSelectedElement","innerHTML","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2f0106b.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react'\nimport styled from 'styled-components'\n\nconst StyledContainer = styled.div`\n  .highlight {\n    background-color: rgb(173, 219, 255, 0.8) !important;\n    outline: 1px solid rgb(35, 159, 255) !important;\n  }\n\n  .selected {\n    background-color: rgba(235, 198, 255, 0.8) !important;\n    outline: 1px solid rgb(178, 35, 255) !important;\n  }\n`\n\nfunction Content({ \n  html,\n  selectedElement, \n  onSelectedElement,\n  highlightedElement, \n  onHighlightedElement, \n}) {\n  const elementRef = useRef()\n\n  useEffect(() => {\n    const element = elementRef.current\n\n    const handleSelectElement = ({ target: element }) => {\n      if (element === selectedElement) return;\n      onSelectedElement(element)\n    }\n\n    const handleHighlightElement = ({ target: element }) => {\n      if (element === highlightedElement) return;\n      onHighlightedElement(element)\n    }\n\n    const handleRemoveHighlight = () => {\n      onHighlightedElement(null)\n    }\n\n    if (element) {   \n      element.addEventListener(\"click\", handleSelectElement)\n      element.addEventListener(\"mouseover\", handleHighlightElement)\n      element.addEventListener(\"mouseout\", handleRemoveHighlight)\n\n      return () => {\n        element.removeEventListener(\"click\", handleSelectElement)\n        element.removeEventListener(\"mouseover\", handleHighlightElement)\n        element.removeEventListener(\"mouseout\", handleRemoveHighlight)\n      }\n    }\n  }, [highlightedElement, html, selectedElement, onHighlightedElement, onSelectedElement])\n\n  return (\n    <StyledContainer ref={elementRef} id=\"container\">\n      <div dangerouslySetInnerHTML={{__html: html}} />\n    </StyledContainer>\n  )\n}\n\nexport default Content","import {Controlled as CodeMirror} from 'react-codemirror2'\n\nfunction Editor({ \n  html, \n  setHtml,\n  isLiveEditor,\n  setIsLiveEditor \n}) {\n  return (\n    <div \n      onMouseEnter={() => setIsLiveEditor(true)} \n      onMouseLeave={() => setIsLiveEditor(false)}\n      style={{ height: \"100%\" }}\n    >\n      <CodeMirror \n        value={html}\n        onBeforeChange={(editor, data, value) => {\n          if (isLiveEditor) {\n            setHtml(value)\n          }\n        }}\n        options={{\n          mode: 'xml',\n          htmlMode: true,\n          theme: 'material'\n        }}\n      />\n    </div>\n  )\n}\n\nexport default Editor","import styled from 'styled-components'\n\nconst StyledAttributeList = styled.ul`\n  list-style: none;\n  padding: 0;\n  font-weight: bold;\n\n  .name {\n    color: blue;\n  }\n\n  .value {\n    color: purple;\n  }\n`\n\nfunction AttributeList({ selectedElement }) {\n  return (\n    <>\n      <h2>Attributes</h2>\n      <StyledAttributeList>\n        {Array.from(selectedElement.attributes).map(({ name, value}) => (\n          <li key={name}>\n            <span className=\"name\">{name}</span>=<span className=\"value\">\"{value}\"</span>\n          </li>\n        ))}\n      </StyledAttributeList>\n    </>\n  )\n}\n\nexport default AttributeList","export const commonDOMProperties = [\n  {\n    name: \"id\",\n    readOnly: false,\n    description: \"The unique identifier for the element. Useful for CSS styling and finding an element using querySelector.\",\n    mdn: \"https://developer.mozilla.org/en-US/docs/Web/API/Element/id\"\n  },\n  {\n    name: \"className\",\n    readOnly: false,\n    description: \"The class attribute for the element. You can assign single classes with `element.className = 'my-class'` or multiple classes by separating classes with spaces, like this: `element.className = 'my-class another-class'`. Useful for CSS styling of multiple elements and finding element using querySelector.\",\n    mdn: \"https://developer.mozilla.org/en-US/docs/Web/API/Element/className\"\n  },\n  {\n    name: \"textContent\",\n    readOnly: false,\n    description: \"The content visible inside the element. For example, <h1>Hello</h1> has a textContent of 'Hello'. Basically the same as innerText.\",\n    mdn: \"https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\"\n  },\n  {\n    name: \"innerHTML\",\n    readOnly: false,\n    description: \"A representation of the element's children as an HTML string. Useful for creating lots of HTML elements from string templates.\",\n    mdn: \"https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\"\n  },\n  {\n    name: \"children\",\n    readOnly: true,\n    description: \"An array-like collection (HTMLCollection) of all the child elements. Useful for dynamically accessing all child elements from a node.\",\n    mdn: \"https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/children\"\n  },\n  {\n    name: \"parentElement\",\n    readOnly: true,\n    description: \"The node's direct parent element. What more do you need to know?\",\n    mdn: \"https://developer.mozilla.org/en-US/docs/Web/API/Node/parentElement\"\n  },\n  {\n    name: \"value\",\n    readOnly: false,\n    description: \"Get/sets the value of a form field. Can only be used with certain elements that a user can enter data into, such as <input>, <textarea>, and <select>. Useful when working with forms and trying to access the information entered into the form. (<li> elements also have a value property, but it won't give you what you want)\",\n    mdn: \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefvalue\"\n  },\n  // TODO: add style (almost there, need to add input to enter name as well)\n  // {\n  //   name: \"style\",\n  //   readOnly: false,\n  //   mdn: \"https://developer.mozilla.org/en-US/docs/Web/API/ElementCSSInlineStyle/style\"\n  // },\n  // {\n  //   name: \"dataset\",\n  //   readOnly: false,\n  // },\n]\n\nexport const commonDOMMethods = [\n  {\n    name: \"remove\",\n    description: \"Remove the element from the page\",\n    mdn: \"https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/remove\",\n    args: []\n  },\n  {\n    name: \"querySelector\",\n    description: \"Find the first element that matches the given CSS selector *within* the element\",\n    mdn: \"https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\",\n    args: [\n      {\n        name: \"selector\",\n        description: \"A CSS selector\"\n      }\n    ]\n  },\n  {\n    name: \"querySelectorAll\",\n    description: \"Find *all* the elements that matches the given CSS selector *within* the element\",\n    mdn: \"https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\",\n    args: [\n      {\n        name: \"selector\",\n        description: \"A CSS selector\"\n      }\n    ]\n  },\n  {\n    name: \"closest\",\n    description: \"Find the closest parent element that matches the given CSS selector\",\n    mdn: \"https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\",\n    args: [\n      {\n        name: \"selector\",\n        description: \"A CSS selector\"\n      }\n    ]\n  },\n  {\n    name: \"matches\",\n    description: \"Checks if the element matches the given CSS selector and returns true or false.\",\n    mdn: \"https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\",\n    args: [\n      {\n        name: \"selector\",\n        description: \"A CSS selector\"\n      }\n    ]\n  },\n]","import styled from 'styled-components'\n\nconst StyledSpan = styled.span`\n  color: blue;\n  cursor: pointer;\n`\n\nfunction SelectableElement({ element, onSelectedElement, onHighlightedElement }) {\n  return (\n    <StyledSpan \n      onClick={() => onSelectedElement(element)} \n      onMouseOver={() => onHighlightedElement(element)}\n      onMouseOut={() => onHighlightedElement(null)}\n    >\n      &lt;{element.tagName.toLowerCase()}&gt;\n    </StyledSpan>\n  )\n}\n\nexport default SelectableElement","import { useState } from 'react'\nimport styled from 'styled-components'\nimport { commonDOMMethods } from '../data'\nimport SelectableElement from './SelectableElement'\n\nconst StyledMethodList = styled.ul`\n  list-style: none;\n  padding: 0;\n\n  a {\n    font-size: 0.75em;\n  }\n\n  h3 {\n    margin-bottom: 0.1rem;\n  }\n\n  p {\n    margin-top: 0.25rem;\n    color: #333;\n  }\n`\n\nfunction MethodItem({ \n  element, \n  name, \n  args, \n  description, \n  mdn,\n  onHighlightedElement,\n  onSelectedElement,\n  onUpdateSelectedElement \n}) {\n  const argList = args.map(arg => arg.name).join(\", \")\n\n  const inputs = args.reduce((arr, arg) => {\n    arr.push([arg.name, \"\"])\n    return arr\n  }, [])\n  \n  const [inputData, setInputData] = useState(inputs)\n\n  const [methodResult, setMethodResult] = useState(\"run method to see return value\")\n\n  const inputValues = inputData.map(([, value]) => value)\n\n  const preview = element.tagName.toLowerCase() + \".\" + name + \"(\" + inputValues.map(value => `\"${value}\"`).join(\", \") + \")\"\n\n  const getResultPreview = () => {\n    if (methodResult instanceof HTMLElement) {\n      return <SelectableElement \n        element={methodResult} \n        onSelectedElement={onSelectedElement}\n        onHighlightedElement={onHighlightedElement}\n      />\n    } else if (methodResult instanceof NodeList) {\n      return Array.from(methodResult).map(el => (\n        <SelectableElement \n          element={el} \n          onSelectedElement={onSelectedElement}\n          onHighlightedElement={onHighlightedElement}\n        />\n      ))\n    } else if (methodResult === undefined) {\n      return \"undefined\"\n    } else if (methodResult === null) {\n      return \"null\"\n    } else {\n      return methodResult.toString()\n    }\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    const result = element[name](...inputValues)\n    setMethodResult(result)\n  }\n  \n  return (\n    <li>\n      <h3><em>Element.</em>{name}({argList}) <a href={mdn} target=\"_blank\" rel=\"noreferrer\">MDN</a></h3>\n      <p>{description}</p>\n      <form onSubmit={handleSubmit} style={{ marginLeft: \"1rem\" }}>\n        <h4>Arguments</h4>\n        {args.length === 0 \n          ? <p>(none)</p>\n          : args.map(arg => (\n            <label key={arg.name}>\n              {arg.name}{\": \"}\n              <input type=\"text\" value={inputData[arg.name]} onChange={({ target }) => {\n                setInputData(inputs => \n                  inputs.map(input => \n                    input[0] === arg.name ? [arg.name, target.value] : input\n                  )\n                )\n              }} />\n            </label>\n            ))\n        }\n        <h4>Preview</h4>\n        <p>{preview}</p>\n        <input type=\"submit\" value=\"Run method\" />\n        <h4>Return Value</h4>\n        <p>{getResultPreview()}</p>\n      </form>\n    </li>\n  )\n}\n\nfunction MethodList({ \n  selectedElement,\n  onSelectedElement,\n  onHighlightedElement,\n  onUpdateSelectedElement,\n  onUpdateSelectedElementStyle\n}) {\n\n  const methodList = commonDOMMethods\n    .map(method => {\n      \n      return (\n        <MethodItem \n          key={method.name} \n          element={selectedElement}\n          name={method.name}\n          description={method.description}\n          mdn={method.mdn}\n          args={method.args}\n          onHighlightedElement={onHighlightedElement}\n          onSelectedElement={onSelectedElement}\n          onUpdateSelectedElement={onUpdateSelectedElement}\n        />\n      )\n    })\n\n  return (\n    <>\n      <h2>Common Methods</h2>\n      <StyledMethodList>\n        {methodList}\n      </StyledMethodList>\n    </>\n  )\n}\n\nexport default MethodList","import styled from 'styled-components'\nimport { commonDOMProperties } from '../data'\n\nconst StyledPropertyList = styled.ul`\n  list-style: none;\n  padding: 0;\n\n  a {\n    font-size: 0.75em;\n  }\n\n  h3 {\n    margin-bottom: 0.1rem;\n  }\n\n  p {\n    margin-top: 0.25rem;\n    color: #333;\n  }\n\n  .selectable {\n    color: blue;\n    cursor: pointer;\n  }\n`\n\nfunction PropertyItem({ name, description, mdn, children }) {\n  return (\n    <li>\n      <h3>{name} <a href={mdn} target=\"_blank\" rel=\"noreferrer\">MDN</a></h3>\n      <p>{description}</p>\n      <span>{name} = </span>{children}\n    </li>\n  )\n}\n\nfunction SelectableElement({ element, onSelectedElement, onHighlightedElement }) {\n  return (\n    <span \n      className=\"selectable\"\n      onClick={() => onSelectedElement(element)} \n      onMouseOver={() => onHighlightedElement(element)}\n      onMouseOut={() => onHighlightedElement(null)}\n    >\n      &lt;{element.tagName.toLowerCase()}&gt;\n    </span>\n  )\n}\n\nfunction PropertyList({ \n  selectedElement,\n  onSelectedElement,\n  onHighlightedElement,\n  onUpdateSelectedElement,\n  onUpdateSelectedElementStyle\n}) {\n\n  const propertiesList = commonDOMProperties\n    .filter(property => property.name in selectedElement)\n    .map(property => {\n      const value = selectedElement[property.name]\n      let children;\n      if (value instanceof HTMLElement) {\n        // parentElement\n        children = <SelectableElement \n          element={value} \n          onSelectedElement={onSelectedElement} \n          onHighlightedElement={onHighlightedElement} \n        />\n      } else if (value instanceof HTMLCollection) {\n        // children\n        if (value.length) {\n          children = Array.from(value).map((child, index) => (\n            <SelectableElement \n              key={index}\n              element={child}\n              onSelectedElement={onSelectedElement} \n              onHighlightedElement={onHighlightedElement} \n            />\n          ))\n        } else {\n          children = \"[]\"\n        }\n      } else if (value instanceof CSSStyleDeclaration) {\n        // styles\n        if (value.length) {\n          let items = [];\n          for (let item of value) {\n            items.push(\n              <li key={item}>\n                <label>\n                  {item}:{\" \"}\n                  <input type=\"text\" value={value[item]} onChange={({ target }) => {\n                    onUpdateSelectedElementStyle(item, target.value)\n                  }} />\n                </label>\n              </li>\n            )\n          }\n          children = (\n            <ul>{items}</ul>\n          )\n        } else {\n          children = \"{}\"\n        }\n      } else if (value instanceof DOMStringMap) {\n        // dataset\n        const dataset = []\n        for (let item in value) {\n          dataset.push(`${item}: ${value[item]}`)\n        }\n        children = dataset.length ? dataset.join(\", \") : \"{}\"\n      } else {\n        // string properties\n        if (property.readOnly) {\n          children = value\n        } else {\n          children = (\n            <input type=\"text\" value={value} onChange={({ target }) => {\n              onUpdateSelectedElement(property.name, target.value)\n            }} />\n          )\n        }\n      }\n\n      return (\n        <PropertyItem \n          key={property.name} \n          name={property.name}\n          description={property.description}\n          mdn={property.mdn}\n        >\n          {children}\n        </PropertyItem>\n      )\n    })\n\n  return (\n    <>\n      <h2>Common Properties</h2>\n      <StyledPropertyList>\n        {propertiesList}\n      </StyledPropertyList>\n    </>\n  )\n}\n\nexport default PropertyList","import {Controlled as CodeMirror} from 'react-codemirror2'\nimport styled from 'styled-components'\nimport { printElementName } from \"../utils\"\nimport AttributeList from './AttributeList'\nimport MethodList from './MethodList'\nimport PropertyList from './PropertyList'\n\nconst StyledElementName = styled.h1`\n  .tag {\n    color: blue\n  }\n\n  .id {\n    color: purple\n  }\n`\n\nconst StyledCodeMirror = styled(CodeMirror)`\n  .CodeMirror {\n    height: auto;\n  }\n`\n\nfunction Inspector({ \n  selectedElement, \n  onSelectedElement, \n  onHighlightedElement, \n  onUpdateSelectedElement,\n  onUpdateSelectedElementStyle \n}) {\n  if (!selectedElement) return null\n\n  const title = printElementName(selectedElement)\n\n  return (\n    <div>\n      <StyledElementName>\n        Element:{\" \"}\n        <span className=\"tag\">{selectedElement.tagName.toLowerCase()}</span>\n        <span className=\"id\">{title}</span>\n      </StyledElementName>\n      <StyledCodeMirror \n        value={selectedElement.outerHTML}\n        options={{\n          mode: 'xml',\n          htmlMode: true,\n          theme: 'material',\n          readOnly: true,\n          lineWrapping: true\n        }}\n      />\n      <AttributeList selectedElement={selectedElement} />\n      <hr />\n      <PropertyList \n        selectedElement={selectedElement}\n        onHighlightedElement={onHighlightedElement}\n        onSelectedElement={onSelectedElement}\n        onUpdateSelectedElement={onUpdateSelectedElement}\n        onUpdateSelectedElementStyle={onUpdateSelectedElementStyle}\n      />\n      <hr />\n      <MethodList \n        selectedElement={selectedElement}\n        onHighlightedElement={onHighlightedElement}\n        onSelectedElement={onSelectedElement}\n        onUpdateSelectedElement={onUpdateSelectedElement}\n      />\n    </div>\n  )\n}\n\nexport default Inspector","export const printElementName = element => {\n  let name = \"\"\n  const classes = element.className\n    .split(\" \")\n    .filter(c => c !== \"selected\" && c !== \"highlight\")\n\n  if (element.id.length) {\n    name += \"#\" + element.id\n  } else if (classes.length) {\n    name += \".\" + classes.join(\".\")\n  }\n  return name\n}","import { useState } from 'react';\nimport styled from 'styled-components'\nimport Content from './Content'\nimport Editor from './Editor'\nimport Inspector from './Inspector'\n\nconst StyledMain = styled.main`\n  margin: 0;\n  padding: 0;\n  display: grid;\n  grid-template-areas: \n    \"content inspector\"\n    \"editor inspector\"\n  ;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n  width: 100vw;\n  height: 100vh;\n  font-size: 16px;\n`\n\nconst StyledContent = styled.div`\n  grid-area: content;\n  cursor: pointer;\n  overflow: auto;\n  padding: 1rem;\n`\n\nconst StyledEditor = styled.div`\n  grid-area: editor;\n  background-color: azure;\n  overflow: auto;\n\n  .react-codemirror2 {\n    height: 100%;\n  }\n\n  .CodeMirror {\n    height: 100%;\n  }\n`\n\nconst StyledInspector = styled.div`\n  grid-area: inspector;\n  background-color: aliceblue;\n  overflow-y: scroll;\n  padding: 0 1rem;\n`\n\nconst initialHTML = `<h1 id=\"welcome\">Welcome to Janky Inspector</h1>\n<p class=\"description\">\n  <em>\n    A playground to learn about the DOM \n    and common methods for interacting with HTML Elements\n  </em>\n</p>\n<p>\n  <em>It's like a less powerful version of the Dev Tools!</em>\n  🤠\n</p>\n<p>On this page, you'll find:</p>\n\n<ul class=\"list\">\n  <li>\n    📄 HTML Content (this part of the page)\n  </li>\n  <li>\n    ➡️ An interactive Inspector tool where you can see common DOM properties and methods (try editing the text fields and running some methods)\n  </li>\n  <li>\n   ⬇️ A text Editor where you can update the HTML displayed in the Content section (you can edit the existing HTML, or paste in some fresh content)\n  </li>\n</ul>\n\n<p id=\"help\" style=\"font-weight: bold; color: red\">\n  To get started, click this element it to show the details in the Inspector!\n</p>\n`\n\nfunction App() {\n  const [html, setHtml] = useState(initialHTML)\n\n  const [editorHtml, setEditorHtml] = useState(initialHTML)\n\n  const [isLiveEditor, setIsLiveEditor] = useState(false)\n  \n  const [highlightedElement, setHighlightedElement] = useState(null)\n\n  // need an object in state because we want to force updates when making changes to the DOM element\n  const [{selectedElement}, setSelectedElement] = useState({selectedElement: null})\n\n  const handleSetHighlightedElement = nextElement => {\n    const container = highlightedElement?.closest(\"#container\")\n    if (container) {\n      container.querySelectorAll(\".highlight\").forEach(el => el.classList.remove(\"highlight\"))\n    }\n    nextElement?.classList.add(\"highlight\")\n    setHighlightedElement(nextElement)\n  }\n\n  const handleSetSelectedElement = nextElement => {\n    const container = selectedElement?.closest(\"#container\")\n    if (container) {\n      container.querySelectorAll(\".selected\").forEach(el => el.classList.remove(\"selected\"))\n    }\n    nextElement?.classList.add(\"selected\")\n    setSelectedElement(() => ({ selectedElement: nextElement }))\n  }\n\n  const handleUpdateSelectedElement = (name, value) => {\n    selectedElement[name] = value\n    const container = selectedElement.closest(\"#container > div\")\n    if (container) setEditorHtml(container.innerHTML)\n    setSelectedElement(() => ({ selectedElement }))\n  }\n\n  const handleUpdateSelectedElementStyle = (style, value) => {\n    selectedElement.style[style] = value\n    const container = selectedElement.closest(\"#container > div\")\n    if (container) setEditorHtml(container.innerHTML)\n    setSelectedElement(() => ({ selectedElement }))\n  }\n\n  return (\n    <StyledMain>\n      <StyledContent>\n        <Content \n          html={html}\n          selectedElement={selectedElement}\n          onSelectedElement={handleSetSelectedElement}\n          highlightedElement={highlightedElement}\n          onHighlightedElement={handleSetHighlightedElement}\n        />\n      </StyledContent>\n      <StyledEditor>\n        <Editor \n          html={editorHtml} \n          setHtml={(html) => {\n            setHtml(html)\n            setEditorHtml(html)\n            setSelectedElement({selectedElement: null})\n          }}\n          isLiveEditor={isLiveEditor}\n          setIsLiveEditor={setIsLiveEditor} \n        />\n      </StyledEditor>\n      <StyledInspector>\n        <Inspector \n          selectedElement={selectedElement} \n          onSelectedElement={handleSetSelectedElement}\n          onHighlightedElement={handleSetHighlightedElement}\n          onUpdateSelectedElement={handleUpdateSelectedElement}\n          onUpdateSelectedElementStyle={handleUpdateSelectedElementStyle}\n        />\n      </StyledInspector>\n    </StyledMain>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/mode/xml/xml';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}